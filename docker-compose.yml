services:
  postgres:
    container_name: ms_pg_sql_new
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Chemege1.
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres:/var/lib/postgres/data
    ports:
      - 5432:5432
    networks:
      - microservices-net
    restart: unless-stopped

  mongodb:
    container_name: ms_mongo_db
    image: mongo:7.0.12
    ports:
      - "27017:27017"
    volumes:
      - mongo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: azelit
      MONGO_INITDB_ROOT_PASSWORD: Chemege1.
    networks:
      - microservices-net

  mongo-express:
    image: mongo-express:1.0.2
    restart: "no"
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: azelit
      ME_CONFIG_BASICAUTH_PASSWORD: Chemege1.
      ME_CONFIG_MONGODB_SERVER: ms_mongo_db
      ME_CONFIG_MONGODB_ADMINUSERNAME: azelit
      ME_CONFIG_MONGODB_ADMINPASSWORD: Chemege1.
    networks:
      - microservices-net

  kafka:
    image: confluentinc/cp-kafka:7.7.0
    restart: "no"
    ports:
      - "29092:29092"
      - "9092:9092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092

  zookeeper:
    image: zookeeper:3.9.2
    restart: "no"
    ports:
      - "2181:2181"


networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  mongo:
  kafka_data: